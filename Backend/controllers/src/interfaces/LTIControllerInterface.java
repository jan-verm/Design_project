package interfaces;

import databaseaccess.exceptions.ClassicDatabaseException;
import databaseaccess.exceptions.ClassicNotFoundException;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Map;

/**
 *
 * @author ?
 */
public interface LTIControllerInterface {

    /**
     * generate secret key pair
     * @param key key generated by tool consumer
     * @return key corresponding to this key pair
     * @throws ClassicDatabaseException
     */
    public String generateKeySecretPair(String key) throws ClassicDatabaseException;

    /**
     * delete secret key pair
     * @param key the key of the tool consumer
     * @throws ClassicDatabaseException
     * @throws ClassicNotFoundException
     */
    void deleteKeySecretPair(String key) throws ClassicDatabaseException, ClassicNotFoundException;

    /**
     * get classic key corresponding to given tool consumer key
     * @param key the key of the tool consumer
     * @return the key of classic
     * @throws ClassicDatabaseException
     * @throws ClassicNotFoundException
     */
    String getSecret(String key) throws ClassicDatabaseException, ClassicNotFoundException;

    /**
     * Calculate the difference between the current time and parseLong.
     * @param parseLong 
     * @return the difference
     */
    public long getTimeDifference(long parseLong);

    /**
     * Generate the OAuth HMAC-SHA1 signature defined by OAuth.
     * @param secret the secret stored in database
     * @param formData the content of the request used to recalculate the HMAC.
     * @param httpMethod the HTTP method of the request used to recalculate the HMAC.
     * @param url the complete url of the request used to recalculate the HMAC.
     * @return the signature
     * @throws java.io.UnsupportedEncodingException
     * @throws java.security.NoSuchAlgorithmException
     * @throws java.security.InvalidKeyException
     */
    public String generateOAuthSignature(String secret, Map<String, String> formData, String httpMethod, String url) throws UnsupportedEncodingException, NoSuchAlgorithmException, InvalidKeyException;

}
